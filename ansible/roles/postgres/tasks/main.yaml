- name: "Installing postgres"
  ansible.builtin.yum:
    name:
      - "postgresql"
      - "postgresql-server"
      - "python-psycopg2"
      - "python-ipaddress"
    state: "present"
    update_cache: true

- name: "Check if PostgreSQL is initialized"
  ansible.builtin.stat:
    path: "/var/lib/pgsql/data/pg_hba.conf"
  register: postgres_data

- name: "Initialize PostgreSQL"
  command:
    cmd: "postgresql-setup initdb"
  when: not postgres_data.stat.exists
    
- name: "Start  service"
  ansible.builtin.service:
    name: "postgresql"
    state: "started"
    enabled: true

- name: "Create app database"
  community.postgresql.postgresql_db:
    state: present
    name: "{{ db_name }}"
  become: yes
  become_user: postgres

- name: "Create db user"
  community.postgresql.postgresql_user:
    state: present
    name: "{{ db_user }}"
    password: "{{ db_password }}"
  become: yes
  become_user: postgres

- name: "Grant db user access to app db"
  community.postgresql.postgresql_privs:
    type: database
    database: "{{ db_name }}"
    roles: "{{ db_user }}"
    grant_option: no
    privs: all
  become: yes
  become_user: postgres

- name: "Revoke access with ident method"
  community.postgresql.postgresql_pg_hba:
    dest: /var/lib/pgsql/data/pg_hba.conf
    contype: host
    users: all
    databases: all
    source: 127.0.0.1/32
    method: ident
    state: absent

- name: "Set access with md5 method"
  community.postgresql.postgresql_pg_hba:
    dest: /var/lib/pgsql/data/pg_hba.conf
    contype: host
    users: all
    databases: all
    source: 127.0.0.1/32
    method: md5
  become: yes
  become_user: postgres

- name: "Restart postgres"
  ansible.builtin.service:
    name: "postgresql"
    state: "restarted"

